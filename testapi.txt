TO√ÄN B·ªò API ENDPOINTS V√Ä H∆Ø·ªöNG D·∫™N TEST POSTMAN
üîß C·∫•u h√¨nh c∆° b·∫£n
Base URL: http://localhost:8000 (ho·∫∑c domain c·ªßa b·∫°n)

Authentication: JWT Token

Header: Authorization: JWT <access_token>
üîê 1. AUTHENTICATION APIs
1.1 ƒêƒÉng k√Ω t√†i kho·∫£n
File:  venv/Lib/site-packages/djoser/views.py (UserViewSet)
URL: POST /auth/users/
Body:
{
    "username": "testuser",
    "email": "test@example.com", 
    "password": "strongpassword123"
}

1.2 ƒêƒÉng nh·∫≠p
File:  user/views.py (MyTokenObtainPairView)
URL: POST /auth/jwt/create/
Body:
{
    "username": "testuser",
    "password": "strongpassword123"
}
Response:
{
    "access": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
    "refresh": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
    "username": "testuser",
    "email": "test@example.com",
    "isAdmin": false
}

1.3 Refresh Token
File: rest_framework_simplejwt (built-in)
URL: POST /auth/jwt/refresh/
Body:
{
    "refresh": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
}

1.4 L·∫•y th√¥ng tin user hi·ªán t·∫°i
File: venv/Lib/site-packages/djoser/views.py
URL: GET /auth/users/me/
Headers: Authorization: JWT <access_token>

üè∑Ô∏è 2. CATEGORY APIs
2.1 L·∫•y danh s√°ch categories
File:  api/views.py (CategoryViewSet)
URL: GET /api/category/
Permission: Public (kh√¥ng c·∫ßn auth)


2.2 L·∫•y chi ti·∫øt category
File:  api/views.py (CategoryViewSet)
URL: GET /api/category/{id}/
Permission: Public


üè¢ 3. BRAND APIs
3.1 L·∫•y danh s√°ch brands
File:  api/views.py (BrandViewSet)
URL: GET /api/brands/
Permission: Public


3.2 L·∫•y chi ti·∫øt brand
File: api/views.py (BrandViewSet)
URL: GET /api/brands/{id}/
Permission: Public


üì¶ 4. PRODUCT APIs
4.1 L·∫•y danh s√°ch products
File:  api/views.py (ProductViewSet)
URL: GET /api/products/
Permission: Public


4.2 L·∫•y chi ti·∫øt product
File:  api/views.py (ProductViewSet)
URL: GET /api/products/{id}/
Permission: Public


4.3 T·∫°o product m·ªõi (Admin only)
File:  api/views.py (ProductViewSet)
URL: POST /api/products/
Headers: Authorization: JWT <admin_access_token>
Body:
{
    "name": "iPhone 14",
    "description": "Latest iPhone model",
    "brand": 1,
    "category": 1,
    "price": "999.99",
    "countInStock": 50
}
Loading...

4.4 C·∫≠p nh·∫≠t product (Admin only)
File: api/views.py (ProductViewSet)
URL: PUT /api/products/{id}/
Headers: Authorization: JWT <admin_access_token>

4.5 X√≥a product (Admin only)
File: api/views.py (ProductViewSet)
URL: DELETE /api/products/{id}/
Headers: Authorization: JWT <admin_access_token>


‚≠ê 5. REVIEW APIs
5.1 L·∫•y reviews c·ªßa product
File: api/views.py (ReviewView)
URL: GET /api/products/{product_id}/reviews/
Permission: Public

5.2 T·∫°o review cho product
File:  api/views.py (ReviewView)
URL: POST /api/products/{product_id}/reviews/
Headers: Authorization: JWT <access_token>
Body:
{
    "rating": 5,
    "comment": "Excellent product!"
}

üõí 6. ORDER APIs
6.1 L·∫•y danh s√°ch orders c·ªßa user
File:  api/views.py (OrderViewSet)
URL: GET /api/orders/
Headers: Authorization: JWT <access_token>

6.2 L·∫•y chi ti·∫øt order
File: api/views.py (OrderViewSet)
URL: GET /api/orders/{id}/
Headers: Authorization: JWT <access_token>

6.3 T·∫°o order m·ªõi
File:  api/views.py (placeOrder function)
URL: POST /api/placeorder/
Headers: Authorization: JWT <access_token>
Body:
{
    "orderItems": [
        {
            "id": 1,
            "qty": 2
        },
        {
            "id": 2,
            "qty": 1
        }
    ],
    "shippingAddress": {
        "address": "123 Main St",
        "city": "New York",
        "postalCode": "10001",
        "country": "USA"
    },
    "paymentMethod": "Credit Card",
    "taxPrice": "10.00",
    "shippingPrice": "5.00",
    "totalPrice": "115.00"
}

üí≥ 7. PAYMENT APIs
7.1 T·∫°o Stripe Payment Intent
File:  api/views.py (StripePaymentView)
URL: POST /api/stripe-payment/
Headers: Authorization: JWT <access_token>
Body:
{
    "order": 1
}
Response:
{
    "clientSecret": "pi_1234567890_secret_abcdef"
}

7.2 C·∫≠p nh·∫≠t order th√†nh ƒë√£ thanh to√°n
File:  api/views.py (updateOrderToPaid function)
URL: POST /api/orders/{order_id}/pay/
Headers: Authorization: JWT <access_token>
Body:
{
    "payment_intent": "pi_1234567890"
}