#!/usr/bin/env python
"""
Setup SubCategories v√† Size Guides cho Smart Chatbot
"""
import os
import sys
import django
from django.conf import settings

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')
django.setup()

from api.models import Category, SubCategory, Size, SizeGuide, Product

def setup_subcategories():
    """T·∫°o subcategories chi ti·∫øt"""
    print("üèóÔ∏è Setting up SubCategories...")
    
    # L·∫•y categories hi·ªán t·∫°i
    print("üìã Available categories:")
    for cat in Category.objects.all():
        print(f"  - {cat.title}")

    # T·∫°o ho·∫∑c l·∫•y parent categories
    ao_parent, created = Category.objects.get_or_create(
        title="√Åo",
        defaults={
            'description': 'T·∫•t c·∫£ c√°c lo·∫°i √°o',
        }
    )
    if created:
        print(f"‚úÖ Created parent category: {ao_parent.title}")

    quan_parent, created = Category.objects.get_or_create(
        title="Qu·∫ßn",
        defaults={
            'description': 'T·∫•t c·∫£ c√°c lo·∫°i qu·∫ßn',
        }
    )
    if created:
        print(f"‚úÖ Created parent category: {quan_parent.title}")

    print(f"‚úÖ Using parent categories: {ao_parent.title}, {quan_parent.title}")
    
    # SubCategories cho √Åo
    ao_subcategories = [
        {
            'title': '√Åo Thun',
            'description': '√Åo thun nam n·ªØ, √°o ph√¥ng, √°o thun oversize',
            'keywords': '√°o thun, √°o ph√¥ng, tshirt, t-shirt, √°o thun nam, √°o thun n·ªØ, √°o thun oversize, √°o thun basic'
        },
        {
            'title': '√Åo S∆° Mi',
            'description': '√Åo s∆° mi nam n·ªØ, √°o s∆° mi c√¥ng s·ªü, √°o s∆° mi casual',
            'keywords': '√°o s∆° mi, s∆° mi, shirt, √°o s∆° mi nam, √°o s∆° mi n·ªØ, √°o s∆° mi c√¥ng s·ªü, √°o s∆° mi tay d√†i, √°o s∆° mi tay ng·∫Øn'
        },
        {
            'title': '√Åo Kho√°c',
            'description': '√Åo kho√°c nam n·ªØ, √°o hoodie, √°o cardigan',
            'keywords': '√°o kho√°c, hoodie, cardigan, jacket, √°o kho√°c nam, √°o kho√°c n·ªØ, √°o kho√°c d√π, √°o kho√°c jean'
        },
        {
            'title': '√Åo Polo',
            'description': '√Åo polo nam n·ªØ, √°o c√≥ c·ªï',
            'keywords': '√°o polo, polo, √°o c√≥ c·ªï, √°o polo nam, √°o polo n·ªØ'
        }
    ]
    
    # SubCategories cho Qu·∫ßn
    quan_subcategories = [
        {
            'title': 'Qu·∫ßn Jean',
            'description': 'Qu·∫ßn jean nam n·ªØ, qu·∫ßn denim',
            'keywords': 'qu·∫ßn jean, jean, denim, qu·∫ßn jean nam, qu·∫ßn jean n·ªØ, qu·∫ßn jean skinny, qu·∫ßn jean baggy, qu·∫ßn jean r√°ch'
        },
        {
            'title': 'Qu·∫ßn Short',
            'description': 'Qu·∫ßn short nam n·ªØ, qu·∫ßn ng·∫Øn',
            'keywords': 'qu·∫ßn short, qu·∫ßn ng·∫Øn, short, qu·∫ßn short nam, qu·∫ßn short n·ªØ, qu·∫ßn short jean, qu·∫ßn short kaki'
        },
        {
            'title': 'Qu·∫ßn D√†i',
            'description': 'Qu·∫ßn d√†i nam n·ªØ, qu·∫ßn √¢u, qu·∫ßn kaki',
            'keywords': 'qu·∫ßn d√†i, qu·∫ßn √¢u, qu·∫ßn kaki, qu·∫ßn d√†i nam, qu·∫ßn d√†i n·ªØ, qu·∫ßn c√¥ng s·ªü'
        },
        {
            'title': 'Qu·∫ßn Jogger',
            'description': 'Qu·∫ßn jogger, qu·∫ßn th·ªÉ thao',
            'keywords': 'qu·∫ßn jogger, jogger, qu·∫ßn th·ªÉ thao, qu·∫ßn jogger nam, qu·∫ßn jogger n·ªØ'
        }
    ]
    
    # T·∫°o subcategories cho √Åo
    for sub_data in ao_subcategories:
        subcategory, created = SubCategory.objects.get_or_create(
            category=ao_parent,
            title=sub_data['title'],
            defaults={
                'description': sub_data['description'],
                'keywords': sub_data['keywords']
            }
        )
        if created:
            print(f"‚úÖ Created: {subcategory}")
        else:
            print(f"üìù Updated: {subcategory}")
            subcategory.description = sub_data['description']
            subcategory.keywords = sub_data['keywords']
            subcategory.save()

    # T·∫°o subcategories cho Qu·∫ßn
    for sub_data in quan_subcategories:
        subcategory, created = SubCategory.objects.get_or_create(
            category=quan_parent,
            title=sub_data['title'],
            defaults={
                'description': sub_data['description'],
                'keywords': sub_data['keywords']
            }
        )
        if created:
            print(f"‚úÖ Created: {subcategory}")
        else:
            print(f"üìù Updated: {subcategory}")
            subcategory.description = sub_data['description']
            subcategory.keywords = sub_data['keywords']
            subcategory.save()

def setup_size_guides():
    """T·∫°o size guides cho subcategories"""
    print("\nüìè Setting up Size Guides...")
    
    # L·∫•y sizes
    sizes = Size.objects.all().order_by('order')
    if not sizes.exists():
        print("‚ùå Kh√¥ng c√≥ Size n√†o trong database!")
        return
    
    # Size guide cho √Åo Thun
    try:
        ao_thun = SubCategory.objects.get(title="√Åo Thun")
        size_guides_ao_thun = [
            {'size': 'S', 'height_min': 150, 'height_max': 160, 'weight_min': 45, 'weight_max': 55, 'chest': '88-92', 'notes': 'Form v·ª´a'},
            {'size': 'M', 'height_min': 160, 'height_max': 170, 'weight_min': 55, 'weight_max': 65, 'chest': '92-96', 'notes': 'Form v·ª´a'},
            {'size': 'L', 'height_min': 170, 'height_max': 175, 'weight_min': 65, 'weight_max': 75, 'chest': '96-100', 'notes': 'Form v·ª´a'},
            {'size': 'XL', 'height_min': 175, 'height_max': 180, 'weight_min': 75, 'weight_max': 85, 'chest': '100-104', 'notes': 'Form v·ª´a'},
        ]
        
        for guide_data in size_guides_ao_thun:
            try:
                size_obj = Size.objects.get(name=guide_data['size'])
                guide, created = SizeGuide.objects.get_or_create(
                    subcategory=ao_thun,
                    size=size_obj,
                    defaults={
                        'height_min': guide_data['height_min'],
                        'height_max': guide_data['height_max'],
                        'weight_min': guide_data['weight_min'],
                        'weight_max': guide_data['weight_max'],
                        'chest': guide_data['chest'],
                        'notes': guide_data['notes']
                    }
                )
                if created:
                    print(f"‚úÖ Created size guide: {guide}")
            except Size.DoesNotExist:
                print(f"‚ùå Size {guide_data['size']} kh√¥ng t·ªìn t·∫°i")
                
    except SubCategory.DoesNotExist:
        print("‚ùå SubCategory '√Åo Thun' kh√¥ng t·ªìn t·∫°i")

def assign_products_to_subcategories():
    """G√°n products hi·ªán t·∫°i v√†o subcategories"""
    print("\nüè∑Ô∏è Assigning products to subcategories...")
    
    # G√°n √°o thun
    try:
        ao_thun_subcat = SubCategory.objects.get(title="√Åo Thun")
        ao_thun_products = Product.objects.filter(
            category__title__icontains="√°o",
            name__icontains="thun"
        )
        
        for product in ao_thun_products:
            product.subcategory = ao_thun_subcat
            product.save()
            print(f"‚úÖ Assigned '{product.name}' to √Åo Thun")
            
    except SubCategory.DoesNotExist:
        print("‚ùå SubCategory '√Åo Thun' kh√¥ng t·ªìn t·∫°i")
    
    # G√°n √°o s∆° mi
    try:
        ao_so_mi_subcat = SubCategory.objects.get(title="√Åo S∆° Mi")
        ao_so_mi_products = Product.objects.filter(
            category__title__icontains="√°o",
            name__icontains="s∆° mi"
        )
        
        for product in ao_so_mi_products:
            product.subcategory = ao_so_mi_subcat
            product.save()
            print(f"‚úÖ Assigned '{product.name}' to √Åo S∆° Mi")
            
    except SubCategory.DoesNotExist:
        print("‚ùå SubCategory '√Åo S∆° Mi' kh√¥ng t·ªìn t·∫°i")

def main():
    """Main function"""
    print("üöÄ Starting SubCategory Setup...")
    
    setup_subcategories()
    setup_size_guides()
    assign_products_to_subcategories()
    
    print("\n‚úÖ SubCategory setup completed!")
    
    # Show results
    print("\nüìä Results:")
    print(f"SubCategories: {SubCategory.objects.count()}")
    print(f"Size Guides: {SizeGuide.objects.count()}")
    print(f"Products with SubCategory: {Product.objects.filter(subcategory__isnull=False).count()}")

if __name__ == "__main__":
    main()
